variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  MAVEN_DEPLOY_OPTS: "-pl :mcone-coresystem,:core-api,:bungee-api,:bukkit-api"

# This will only validate and compile stuff and run e.g. maven-enforcer-plugin.
# Because some enforcer rules might check dependency convergence and class duplications
# we use `test-compile` here instead of `validate`, so the correct classpath is picked up.
.validate: &validate
  tags:
    - maven
  image: maven:3.6.1-jdk-8
  stage: build
  script:
    - 'mvn $MAVEN_CLI_OPTS test-compile'

# For merge requests do not `deploy` but only run `verify`.
# See https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
.verify: &verify
  tags:
    - maven
  image: maven:3.6.1-jdk-8
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS install'

validate:jdk8:
  <<: *validate

verify:master:jdk8:
  <<: *verify
  artifacts:
    name: "$CI_PROJECT_PATH-jars-packaged-$CI_JOB_NAME"
    paths:
      - $CI_PROJECT_DIR/*/target/*.jar
  only:
    - 1.8.8
    - 1.13.2

verify:merges:jdk8:
  <<: *verify
  except:
    - 1.8.8
    - 1.13.2

# For `master` branch run `mvn deploy` automatically.
# Uses mounted settings.xml for authenticating with mcone-repo
deploy:jdk8:
  tags:
    - maven
  image: maven:3.6.1-jdk-8
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS javadoc:jar javadoc:aggregate source:jar deploy $MAVEN_DEPLOY_OPTS'
  artifacts:
    name: "$CI_PROJECT_PATH-javadoc"
    paths:
      - $CI_PROJECT_DIR/target/site/apidocs
      - $CI_PROJECT_DIR/*/target/*-javadoc.jar
      - $CI_PROJECT_DIR/*/target/*-sources.jar
  only:
    - 1.8.8
    - 1.13.2

pages:
  image: busybox:latest
  stage: deploy
  script:
    - 'mv $CI_PROJECT_DIR/target/site/apidocs $CI_PROJECT_DIR/public/'
  dependencies:
    - deploy:jdk8
  artifacts:
    paths:
      - public
  only:
    - 1.8.8

.deploy:artifacts:
  tags:
    - maven
  image: maven:3.6.1-jdk-8
  stage: deploy
  script:
    - export MVN_PROJECT_VERSION=$(mvn --non-recursive help:evaluate -Dexpression=project.version | grep -v '\[.*')
    - |
      curl -X PUT \
      --data-binary "$CI_PROJECT_DIR/bungee/target/mcone-coresystem-bungee-$MVN_PROJECT_VERSION.jar" \
      https://repo.mcone.eu/repository/plugin-repo/eu/mcone/coresystem/bungee/$CI_COMMIT_REF_NAME/$MVN_PROJECT_VERSION/mcone-coresystem-bungee-$MVN_PROJECT_VERSION.jar
    - |
      curl -X PUT \
      --data-binary "$CI_PROJECT_DIR/bungee/target/mcone-coresystem-bukkit-$MVN_PROJECT_VERSION.jar" \
      https://repo.mcone.eu/repository/plugin-repo/eu/mcone/coresystem/bukkit/$CI_COMMIT_REF_NAME/$MVN_PROJECT_VERSION/mcone-coresystem-bukkit-$MVN_PROJECT_VERSION.jar
  only:
    - 1.8.8
    - 1.13.2